We set up a DP on (start index, end index, number of consecutive digits matching our start index). In
other words, the current string we are solving is the substring from start index to end index, plus some
number of additional digits (all equal to S[start]) added as a prefix to our substring.


We then have two choices from any given state:

1 Cash in on our consecutive digits at the start and recurse on .
2 Pick an index i such that S[start] = S[i], and collapse everything between those two indices in order
to merge them together for an even larger prefix. This results in a score of , and we can loop over all i to
take the maximum. 
